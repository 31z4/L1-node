name: Create and publish the Docker image

on:
  push:
    branches:
      - "main"
    tags: ["*"]
    paths:
      - ".github/workflows/release.yml"
      - "container/**"
      - "Dockerfile"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set orchestrator env (main)
        if: github.ref_type == 'tag'
        run: echo "NETWORK=main" >> $GITHUB_ENV

      - name: Set orchestrator env (test)
        if: github.ref_type == 'branch'
        run: echo "NETWORK=test" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: "arm64"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set the git short sha
        id: git
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Compute version hash
        id: secret
        run: |
          digest=$(echo -n "${{ github.run_number }}_${{ steps.git.outputs.sha_short }}${{ secrets.RELEASE_KEY }}" | sha256sum | head -c 64)
          echo "::add-mask::${digest}"
          echo "VERSION_HASH=${digest}" >> $GITHUB_ENV

      - name: Compute the mutable docker tag
        id: tags
        run: |
          repo="ghcr.io/$GITHUB_REPOSITORY"
          docker_tag="$NETWORK"

          # ensure canaries gets docker tagged correctly
          # and get moved forward whenever there's a main release
          echo "mutable_docker_tags<<EOF" >> $GITHUB_OUTPUT
          if [[ "$GITHUB_REF_TYPE" == "tag" ]] && [[ "$GITHUB_REF_NAME" == canary-* ]]; then
            docker_tag="canary"
          elif [[ "$GITHUB_REF_TYPE" == "tag" ]]; then
            echo "${repo}:canary" >> $GITHUB_OUTPUT
          fi
          echo "${repo}:${docker_tag}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ghcr.io/filecoin-saturn/l1-node:${{ github.run_number}}_${{ steps.git.outputs.sha_short }}
            ${{ steps.tags.outputs.mutable_docker_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: |
            ${{ steps.tags.outputs.mutable_docker_tags }}
          cache-to: type=inline
          build-args: |
            NETWORK=${{ env.NETWORK }}
            VERSION=${{ github.run_number }}_${{ steps.git.outputs.sha_short }}
            VERSION_HASH=${{ env.VERSION_HASH }}
            LASSIE_EVENT_RECORDER_URL=${{ secrets.LASSIE_EVENT_RECORDER_URL }}
            LASSIE_EVENT_RECORDER_AUTH=${{ secrets.LASSIE_EVENT_RECORDER_AUTH }}
            LASSIE_EXCLUDE_PROVIDERS=bafzbeibhqavlasjc7dvbiopygwncnrtvjd2xmryk5laib7zyjor6kf3avm
